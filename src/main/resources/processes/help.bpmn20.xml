<?xml version="1.0" encoding="UTF-8"?>
<definitions
        xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:activiti="http://activiti.org/bpmn"
        targetNamespace="Examples">

    <process id="help" name="help" isExecutable="true">
        <startEvent id="startHelp" name="startHelp"/>
        <sequenceFlow sourceRef="startHelp" targetRef="setupInitOptions"/>
        <serviceTask id="setupInitOptions" name="setupInitOptions"
                     activiti:expression="#{bot.sendOptions(execution, chatId, 'К чему относится ваша проблема?', 'initAnswer', 'vsp', 'Обслуживание в отделении', 'terminal', 'Банкоматы', 'cards', 'Карты', 'bonuses', 'Бонусы', 'cabinet', 'Личный кабинет')}"/>
        <sequenceFlow sourceRef="setupInitOptions" targetRef="selectInitialOption"/>
        <userTask id="selectInitialOption" name="selectInitialOption" />
        <sequenceFlow sourceRef="selectInitialOption" targetRef="initialOptionSelected"/>
        <exclusiveGateway id="initialOptionSelected" name="initialOptionSelected"/>
        <sequenceFlow sourceRef="initialOptionSelected" targetRef="setupVspOptions">
            <conditionExpression xsi:type="tFormalExpression">#{initAnswer == "vsp"}</conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="initialOptionSelected" targetRef="enterTerminalNumber">
            <conditionExpression xsi:type="tFormalExpression">#{initAnswer == "terminal"}</conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="initialOptionSelected" targetRef="setupInitOptions">
            <conditionExpression xsi:type="tFormalExpression">
                #{!initAnswerOptions.containsKey(initAnswer)}
            </conditionExpression>
        </sequenceFlow>

        <serviceTask id="setupVspOptions" name="setupVspOptions"
                     activiti:expression="#{bot.sendOptions(execution, chatId, 'Уточнение отделения', 'vspChoose', 'vspNumber', '№ отделения', 'address', 'Адрес отделения', 'geolocation', 'Геопозиция')}"/>
        <sequenceFlow sourceRef="setupVspOptions" targetRef="selectVspOption"/>
        <userTask id="selectVspOption" name="selectVspOption" />
        <sequenceFlow sourceRef="selectVspOption" targetRef="vspOptionSelected"/>
        <exclusiveGateway id="vspOptionSelected" name="vspOptionSelected"/>
        <sequenceFlow sourceRef="vspOptionSelected" targetRef="vspChooseLocation">
            <conditionExpression xsi:type="tFormalExpression">#{vspChoose == "geolocation"}</conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="vspOptionSelected" targetRef="setupVspOptions">
            <conditionExpression xsi:type="tFormalExpression">
                #{!vspChooseOptions.containsKey(vspChoose)}
            </conditionExpression>
        </sequenceFlow>
        <serviceTask id="vspChooseLocation" name="vspChooseLocation"
                     activiti:expression="#{bot.requestLocation(chatId, 'Укажите локацию', 'geolocation')}"/>
        <sequenceFlow sourceRef="vspChooseLocation" targetRef="setupExitOptions"/>
        
        <serviceTask id="enterTerminalNumber" name="enterTerminalNumber"
                     activiti:expression="#{bot.requestString(chatId, 'Введите номер банкомата', 'terminalNumber')}"/>
        <sequenceFlow sourceRef="enterTerminalNumber" targetRef="enterTerminalNumberTask"/>
        <userTask id="enterTerminalNumberTask" name="enterTerminalNumberTask" />
        <sequenceFlow sourceRef="enterTerminalNumberTask" targetRef="setupTerminalOptions"/>
        <serviceTask id="setupTerminalOptions" name="setupTerminalOptions"
                     activiti:expression="#{bot.sendOptions(execution, chatId, 'Уточните тип проблемы', 'terminalProblem', 'card', 'Забрал карту', 'noMoney', 'Отсутствуют деньги', 'noSaved', 'Деньги не зачислены на карту', 'pause', 'Завис', 'another', 'Другая проблема')}"/>
        <sequenceFlow sourceRef="setupTerminalOptions" targetRef="selectTerminalOptions"/>
        <userTask id="selectTerminalOptions" name="selectTerminalOptions" />
        <sequenceFlow sourceRef="selectTerminalOptions" targetRef="terminalOptionSelected"/>
        <exclusiveGateway id="terminalOptionSelected" name="terminalOptionSelected"/>

        <sequenceFlow sourceRef="terminalOptionSelected" targetRef="setupExitOptions">
            <conditionExpression xsi:type="tFormalExpression">#{terminalProblem == "card" || terminalProblem == "another" }</conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="terminalOptionSelected" targetRef="setupTerminalOptions">
            <conditionExpression xsi:type="tFormalExpression">
                #{!terminalProblemOptions.containsKey(terminalProblem)}
            </conditionExpression>
        </sequenceFlow>


        <serviceTask id="setupExitOptions" name="setupExitOptions"
                     activiti:expression="#{bot.sendOptions(execution, chatId, 'Хотите добавить комментарий?', 'hasComment', 'yes', 'Да', 'no', 'Нет')}"/>
        <sequenceFlow sourceRef="setupExitOptions" targetRef="selectExitOptions"/>
        <userTask id="selectExitOptions" name="selectExitOptions" />
        <sequenceFlow sourceRef="selectExitOptions" targetRef="exitOptionSelected"/>
        <exclusiveGateway id="exitOptionSelected" name="exitOptionSelected"/>

        <sequenceFlow sourceRef="exitOptionSelected" targetRef="enterComment">
            <conditionExpression xsi:type="tFormalExpression">#{hasComment == "yes"}</conditionExpression>
        </sequenceFlow>
        <sequenceFlow sourceRef="exitOptionSelected" targetRef="createRequest">
            <conditionExpression xsi:type="tFormalExpression">#{hasComment == "no"}</conditionExpression>
        </sequenceFlow>
        <serviceTask id="enterComment" name="enterComment"
                     activiti:expression="#{bot.requestString(chatId, 'Введите комментарий', 'terminalNumber')}"/>
        <sequenceFlow sourceRef="enterComment" targetRef="enterCommentTask"/>
        <userTask id="enterCommentTask" name="enterCommentTask" />
        <sequenceFlow sourceRef="enterCommentTask" targetRef="createRequest"/>

        <serviceTask id="createRequest" name="createRequest"
                     activiti:expression="#{bot.assignRequest(chatId)}"/>
        <sequenceFlow sourceRef="createRequest" targetRef="endHelp"/>

        <endEvent id="endHelp" name="endHelp"/>
    </process>

</definitions>